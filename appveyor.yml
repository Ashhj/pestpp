environment:
  
  matrix:
    - PYTHON_VERSION: "3.6"
      CONDA_INSTALL_LOCN: "C:\\Miniconda36-x64"

platform:
    - x64
clone_depth: 1
shallow_clone: true

# Do not build on tags (GitHub and BitBucket)
skip_tags: false

# Start builds on tags only (GitHub and BitBucket)
skip_non_tags: false

cache:
  - '%LOCALAPPDATA%\pip\Cache'
  - '%USERPROFILE%\.cache\pyemu'

init:
  - echo %PYTHON_VERSION% %CONDA_INSTALL_LOCN%

install:
  - set PATH=%CONDA_INSTALL_LOCN%;%CONDA_INSTALL_LOCN%\scripts;%PATH%;
  - set PYTHONUNBUFFERED=1
  # for msinttypes and newer stuff
  - conda config --set always_yes true
  - conda update conda
  - conda update --all
  - conda config --set show_channel_urls yes
  - conda config --prepend channels conda-forge
  - conda info -a

  - conda install --yes python=%PYTHON_VERSION% pip numpy scipy pandas nose matplotlib
  - pip install coveralls
  - pip install pyshp
  - pip install nose-timer
  - pip install git+https://github.com/modflowpy/flopy.git@develop
  - pip install git+https://github.com/jtwhite79/pyemu.git@develop
  # Show the installed packages + versions
  - conda list

build: false

test_script:
  - #cd benchmarks
  - set PATH=..\..\..\test_bin\win;..\..\test_bin\win;%PATH%;
  - nosetests -v -w benchmarks travis_tests.py
  - nosetests -v -w benchmarks ies_test.test_chenoliver
  - nosetests -v -w benchmarks opt_test.std_weights_test
  - nosetests -v -w benchmarks opt_test.run_supply2_test
  - nosetests -v -w benchmarks ies_test.test_freyberg_full_cov_reorder
  - nosetests -v -w benchmarks ies_test.test_freyberg_full_cov_reorder_run
  - nosetests -v -w benchmarks ies_test.test_freyberg_full_cov
  - nosetests -v -w benchmarks ies_test.test_freyberg_ineq
  - nosetests -v -w benchmarks ies_test.freyberg_localizer_test3
  - nosetests -v -w benchmarks ies_test.tenpar_subset_test
  - nosetests -v -w benchmarks ies_test.tenpar_full_cov_test
  - nosetests -v -w benchmarks ies_test.tenpar_tight_tol_test
  - nosetests -v -w benchmarks ies_test.tenpar_narrow_range_test
  - nosetests -v -w benchmarks ies_test.tenpar_fixed_test
  - nosetests -v -w benchmarks ies_test.tenpar_fixed_test2
  - nosetests -v -w benchmarks ies_test.tenpar_subset_how_test
  - nosetests -v -w benchmarks ies_test.tenpar_localizer_test3
  - nosetests -v -w benchmarks ies_test.test_chenoliver 
  - #cd ..

after_test:
 - echo done
matrix:
  fast_finish: true